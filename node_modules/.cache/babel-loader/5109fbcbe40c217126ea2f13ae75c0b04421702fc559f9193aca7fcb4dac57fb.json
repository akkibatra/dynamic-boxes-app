{"ast":null,"code":"var _jsxFileName = \"/Users/akshaybatra/Workspace/dynamic-boxes-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [boxes, setBoxes] = useState([]);\n  const addBox = () => {\n    const newBox = {\n      id: boxes.length + 1,\n      color: getRandomColor(),\n      text: 'New Box'\n    };\n    setBoxes(prevBoxes => [...prevBoxes, newBox]);\n  };\n  const removeBox = id => {\n    const updatedBoxes = boxes.filter(box => box.id !== id);\n    setBoxes(updatedBoxes);\n  };\n  const startEditing = (id, text) => {\n    setEditingBoxId(id);\n    setNewBoxText(text);\n  };\n  const finishEditing = () => {\n    setEditingBoxId(null);\n    setNewBoxText('');\n  };\n  const handleInputChange = event => {\n    setNewBoxText(event.target.value);\n  };\n  const updateBoxText = id => {\n    const updatedBoxes = boxes.map(box => {\n      if (box.id === id) {\n        return {\n          ...box,\n          text: newBoxText\n        };\n      }\n      return box;\n    });\n    setBoxes(updatedBoxes);\n    finishEditing();\n  };\n  const getRandomColor = () => {\n    const colors = ['green', 'yellow', 'purple', 'orange'];\n    const randomIndex = Math.floor(Math.random() * colors.length);\n    return colors[randomIndex];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dynamic Boxes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addBox,\n      children: \"Add Box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        style: {\n          backgroundColor: 'blue'\n        }\n      }, \"source\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), boxes.map(box => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"arrow\",\n          style: {\n            top: '15px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box\",\n          style: {\n            backgroundColor: box.color\n          },\n          onClick: () => startEditing(box.id, box.text)\n        }, box.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this), editingBoxId === box.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-popup\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newBoxText,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updateBoxText(box.id),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: finishEditing,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-text\",\n          children: box.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"arrow\",\n        style: {\n          top: '15px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        style: {\n          backgroundColor: 'green'\n        }\n      }, \"source\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"t96SUTpcasxr4CTdBqCeMmnlzE0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","boxes","setBoxes","addBox","newBox","id","length","color","getRandomColor","text","prevBoxes","removeBox","updatedBoxes","filter","box","startEditing","setEditingBoxId","setNewBoxText","finishEditing","handleInputChange","event","target","value","updateBoxText","map","newBoxText","colors","randomIndex","Math","floor","random","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","backgroundColor","top","editingBoxId","type","onChange","_c","$RefreshReg$"],"sources":["/Users/akshaybatra/Workspace/dynamic-boxes-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [boxes, setBoxes] = useState([\n  ]);\n\n  const addBox = () => {\n    const newBox = {\n      id: boxes.length + 1,\n      color: getRandomColor(),\n      text: 'New Box',\n    };\n    setBoxes((prevBoxes) => [...prevBoxes, newBox]);\n  };\n\n  const removeBox = (id) => {\n    const updatedBoxes = boxes.filter((box) => box.id !== id);\n    setBoxes(updatedBoxes);\n  };\n\n  const startEditing = (id, text) => {\n    setEditingBoxId(id);\n    setNewBoxText(text);\n  };\n\n  const finishEditing = () => {\n    setEditingBoxId(null);\n    setNewBoxText('');\n  };\n\n  const handleInputChange = (event) => {\n    setNewBoxText(event.target.value);\n  };\n\n  const updateBoxText = (id) => {\n    const updatedBoxes = boxes.map((box) => {\n      if (box.id === id) {\n        return { ...box, text: newBoxText };\n      }\n      return box;\n    });\n    setBoxes(updatedBoxes);\n    finishEditing();\n  };\n\n  const getRandomColor = () => {\n    const colors = ['green', 'yellow', 'purple', 'orange'];\n    const randomIndex = Math.floor(Math.random() * colors.length);\n    return colors[randomIndex];\n  };\n\n\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic Boxes</h1>\n      <button onClick={addBox}>Add Box</button>\n      <div className=\"box-container\">\n        <div\n          key=\"source\"\n          className=\"box\"\n          style={{ backgroundColor: 'blue' }}\n        />\n        {boxes.map((box) => (\n            <>\n              <div\n              className=\"arrow\"\n              style={{\n                top: '15px',\n              }} />\n              <div\n                key={box.id}\n                className=\"box\"\n                style={{ backgroundColor: box.color }}\n                onClick={() => startEditing(box.id, box.text)} />\n                {editingBoxId === box.id ? (\n                  <div className=\"box-popup\">\n                    <input\n                      type=\"text\"\n                      value={newBoxText}\n                      onChange={handleInputChange}\n                    />\n                    <button onClick={() => updateBoxText(box.id)}>Save</button>\n                    <button onClick={finishEditing}>Cancel</button>\n                  </div>\n                ) : (\n                  <div className=\"box-text\">{box.text}</div>\n                )}\n            </>\n        ))}\n        <div \n              className=\"arrow\"\n              style={{\n              top: '15px',\n              }}\n            />\n\n        <div\n          key=\"source\"\n          className=\"box\"\n          style={{ backgroundColor: 'green' }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}