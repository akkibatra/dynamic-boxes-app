{"ast":null,"code":"var _jsxFileName = \"/Users/akshaybatra/Workspace/dynamic-boxes-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [source, setSource] = useState(\"Source\");\n  const [destination, setDestination] = useState(\"Sync\");\n  const [boxes, setBoxes] = useState([]);\n  const [selectedBoxId, setSelectedBoxId] = useState(null);\n  const [newBoxText, setNewBoxText] = useState('');\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const addBox = () => {\n    const newBox = {\n      id: boxes.length + 1,\n      color: getRandomColor(),\n      text: 'transformer_' + (boxes.length + 1)\n    };\n    setBoxes(prevBoxes => [...prevBoxes, newBox]);\n  };\n  const removeBox = id => {\n    const updatedBoxes = boxes.filter(box => box.id !== id);\n    setBoxes(updatedBoxes);\n  };\n  const openModal = (id, text) => {\n    setSelectedBoxId(id);\n    setNewBoxText(text);\n    setModalIsOpen(true);\n  };\n  const closeModal = () => {\n    setSelectedBoxId(null);\n    setNewBoxText('');\n    setModalIsOpen(false);\n  };\n  const handleInputChange = event => {\n    setNewBoxText(event.target.value);\n  };\n  const updateBoxText = () => {\n    const updatedBoxes = boxes.map(box => {\n      if (box.id === selectedBoxId) {\n        return {\n          ...box,\n          text: newBoxText\n        };\n      }\n      return box;\n    });\n    setBoxes(updatedBoxes);\n    closeModal();\n  };\n  const getRandomColor = () => {\n    const colors = ['green', 'yellow', 'purple', 'orange'];\n    const randomIndex = Math.floor(Math.random() * colors.length);\n    return colors[randomIndex];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dynamic Boxes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addBox,\n      children: \"Add Box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        style: {\n          backgroundColor: 'white'\n        },\n        onClick: () => openModal(box.id, box.text),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-text\",\n          children: source\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, \"source\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), boxes.map(box => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"arrow\",\n          style: {\n            top: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box\",\n          style: {\n            backgroundColor: 'orange'\n          },\n          onClick: () => openModal(box.id, box.text),\n          children: box.text\n        }, box.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"arrow\",\n        style: {\n          top: '5px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        style: {\n          backgroundColor: 'white'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-text\",\n          children: \"Sync\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, \"source\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: modalIsOpen,\n        onRequestClose: closeModal,\n        contentLabel: \"Edit Box Text\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Edit Box Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newBoxText,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: updateBoxText,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FGEYNOrX0ygTgW2z3noqdLl5FXE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","source","setSource","destination","setDestination","boxes","setBoxes","selectedBoxId","setSelectedBoxId","newBoxText","setNewBoxText","modalIsOpen","setModalIsOpen","addBox","newBox","id","length","color","getRandomColor","text","prevBoxes","removeBox","updatedBoxes","filter","box","openModal","closeModal","handleInputChange","event","target","value","updateBoxText","map","colors","randomIndex","Math","floor","random","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","backgroundColor","top","isOpen","onRequestClose","contentLabel","type","onChange","_c","$RefreshReg$"],"sources":["/Users/akshaybatra/Workspace/dynamic-boxes-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport './App.css';\n\nfunction App() {\n  const [source, setSource] = useState(\"Source\")\n  const [destination, setDestination] = useState(\"Sync\")\n  const [boxes, setBoxes] = useState([]);\n  const [selectedBoxId, setSelectedBoxId] = useState(null);\n  const [newBoxText, setNewBoxText] = useState('');\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  const addBox = () => {\n    const newBox = {\n      id: boxes.length + 1,\n      color: getRandomColor(),\n      text: 'transformer_' + (boxes.length + 1),\n    };\n    setBoxes((prevBoxes) => [...prevBoxes, newBox]);\n  };\n\n  const removeBox = (id) => {\n    const updatedBoxes = boxes.filter((box) => box.id !== id);\n    setBoxes(updatedBoxes);\n  };\n\n  const openModal = (id, text) => {\n    setSelectedBoxId(id);\n    setNewBoxText(text);\n    setModalIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setSelectedBoxId(null);\n    setNewBoxText('');\n    setModalIsOpen(false);\n  };\n\n  const handleInputChange = (event) => {\n    setNewBoxText(event.target.value);\n  };\n\n  const updateBoxText = () => {\n    const updatedBoxes = boxes.map((box) => {\n      if (box.id === selectedBoxId) {\n        return { ...box, text: newBoxText };\n      }\n      return box;\n    });\n    setBoxes(updatedBoxes);\n    closeModal();\n  };\n\n  const getRandomColor = () => {\n    const colors = ['green', 'yellow', 'purple', 'orange'];\n    const randomIndex = Math.floor(Math.random() * colors.length);\n    return colors[randomIndex];\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic Boxes</h1>\n      <button onClick={addBox}>Add Box</button>\n      <div className=\"box-container\">\n        <div\n          key=\"source\"\n          className=\"box\"\n          style={{ backgroundColor: 'white' }}\n          onClick={() => openModal(box.id, box.text)}\n        >\n          <div className=\"box-text\">{source}</div>\n        </div>\n        {boxes.map((box) => (\n\n          <>\n            <div\n                className=\"arrow\"\n                style={{\n                  top: '5px',\n                }} />\n            <div\n              key={box.id}\n              className=\"box\"\n              style={{ backgroundColor: 'orange' }}\n              onClick={() => openModal(box.id, box.text)}\n              >\n                {box.text}\n              </div>\n\n          </>\n        ))}\n\n        <div \n              className=\"arrow\"\n              style={{\n              top: '5px',\n              }}\n            />\n\n        <div\n          key=\"source\"\n          className=\"box\"\n          style={{ backgroundColor: 'white' }}\n        >\n          <div className=\"box-text\">Sync</div>\n        </div>\n        <Modal\n          isOpen={modalIsOpen}\n          onRequestClose={closeModal}\n          contentLabel=\"Edit Box Text\"\n        >\n          <h2>Edit Box Text</h2>\n          <input\n            type=\"text\"\n            value={newBoxText}\n            onChange={handleInputChange}\n          />\n          <button onClick={updateBoxText}>Save</button>\n          <button onClick={closeModal}>Cancel</button>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}