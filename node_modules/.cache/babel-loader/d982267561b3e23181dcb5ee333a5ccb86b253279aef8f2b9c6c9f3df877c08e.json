{"ast":null,"code":"var _jsxFileName = \"/Users/akshaybatra/Workspace/dynamic-boxes-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [boxes, setBoxes] = useState([]);\n  const [editingBoxId, setEditingBoxId] = useState(null);\n  const [newBoxText, setNewBoxText] = useState('transformer' + (boxes.length + 1));\n  const addBox = () => {\n    const newBox = {\n      id: boxes.length + 1,\n      color: getRandomColor(),\n      text: 'transformer_' + (boxes.length + 1)\n    };\n    setBoxes(prevBoxes => [...prevBoxes, newBox]);\n  };\n  const removeBox = id => {\n    const updatedBoxes = boxes.filter(box => box.id !== id);\n    setBoxes(updatedBoxes);\n  };\n  const openModal = (id, text) => {\n    setSelectedBoxId(id);\n    setNewBoxText(text);\n    setModalIsOpen(true);\n  };\n  const closeModal = () => {\n    setSelectedBoxId(null);\n    setNewBoxText('');\n    setModalIsOpen(false);\n  };\n  const handleInputChange = event => {\n    setNewBoxText(event.target.value);\n  };\n  const updateBoxText = () => {\n    const updatedBoxes = boxes.map(box => {\n      if (box.id === selectedBoxId) {\n        return {\n          ...box,\n          text: newBoxText\n        };\n      }\n      return box;\n    });\n    setBoxes(updatedBoxes);\n    closeModal();\n  };\n  const getRandomColor = () => {\n    const colors = ['green', 'yellow', 'purple', 'orange'];\n    const randomIndex = Math.floor(Math.random() * colors.length);\n    return colors[randomIndex];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dynamic Boxes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addBox,\n      children: \"Add Box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        style: {\n          backgroundColor: 'white'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-text\",\n          children: \"Source\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, \"source\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), boxes.map(box => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"arrow\",\n          style: {\n            top: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box\",\n          style: {\n            backgroundColor: 'orange'\n          },\n          onClick: () => openModal(box.id, box.text),\n          children: box.text\n        }, box.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"arrow\",\n        style: {\n          top: '5px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        style: {\n          backgroundColor: 'white'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-text\",\n          children: \"Sync\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, \"source\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: modalIsOpen,\n        onRequestClose: closeModal,\n        contentLabel: \"Edit Box Text\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Edit Box Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newBoxText,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: updateBoxText,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Mk9g2k0i24R9iCoceL2NxsH3FvQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","boxes","setBoxes","editingBoxId","setEditingBoxId","newBoxText","setNewBoxText","length","addBox","newBox","id","color","getRandomColor","text","prevBoxes","removeBox","updatedBoxes","filter","box","openModal","setSelectedBoxId","setModalIsOpen","closeModal","handleInputChange","event","target","value","updateBoxText","map","selectedBoxId","colors","randomIndex","Math","floor","random","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","backgroundColor","top","isOpen","modalIsOpen","onRequestClose","contentLabel","type","onChange","_c","$RefreshReg$"],"sources":["/Users/akshaybatra/Workspace/dynamic-boxes-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport './App.css';\n\nfunction App() {\n  const [boxes, setBoxes] = useState([]);\n  const [editingBoxId, setEditingBoxId] = useState(null);\n  const [newBoxText, setNewBoxText] = useState('transformer' + (boxes.length + 1));\n\n  const addBox = () => {\n    const newBox = {\n      id: boxes.length + 1,\n      color: getRandomColor(),\n      text: 'transformer_' + (boxes.length + 1),\n    };\n    setBoxes((prevBoxes) => [...prevBoxes, newBox]);\n  };\n\n  const removeBox = (id) => {\n    const updatedBoxes = boxes.filter((box) => box.id !== id);\n    setBoxes(updatedBoxes);\n  };\n\n  const openModal = (id, text) => {\n    setSelectedBoxId(id);\n    setNewBoxText(text);\n    setModalIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setSelectedBoxId(null);\n    setNewBoxText('');\n    setModalIsOpen(false);\n  };\n\n  const handleInputChange = (event) => {\n    setNewBoxText(event.target.value);\n  };\n\n  const updateBoxText = () => {\n    const updatedBoxes = boxes.map((box) => {\n      if (box.id === selectedBoxId) {\n        return { ...box, text: newBoxText };\n      }\n      return box;\n    });\n    setBoxes(updatedBoxes);\n    closeModal();\n  };\n\n  const getRandomColor = () => {\n    const colors = ['green', 'yellow', 'purple', 'orange'];\n    const randomIndex = Math.floor(Math.random() * colors.length);\n    return colors[randomIndex];\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic Boxes</h1>\n      <button onClick={addBox}>Add Box</button>\n      <div className=\"box-container\">\n        <div\n          key=\"source\"\n          className=\"box\"\n          style={{ backgroundColor: 'white' }}\n        >\n          <div className=\"box-text\">Source</div>\n        </div>\n        {boxes.map((box) => (\n\n          <>\n            <div\n                className=\"arrow\"\n                style={{\n                  top: '5px',\n                }} />\n            <div\n              key={box.id}\n              className=\"box\"\n              style={{ backgroundColor: 'orange' }}\n              onClick={() => openModal(box.id, box.text)}\n              >\n                {box.text}\n              </div>\n\n          </>\n        ))}\n\n        <div \n              className=\"arrow\"\n              style={{\n              top: '5px',\n              }}\n            />\n\n        <div\n          key=\"source\"\n          className=\"box\"\n          style={{ backgroundColor: 'white' }}\n        >\n          <div className=\"box-text\">Sync</div>\n        </div>\n        <Modal\n          isOpen={modalIsOpen}\n          onRequestClose={closeModal}\n          contentLabel=\"Edit Box Text\"\n        >\n          <h2>Edit Box Text</h2>\n          <input\n            type=\"text\"\n            value={newBoxText}\n            onChange={handleInputChange}\n          />\n          <button onClick={updateBoxText}>Save</button>\n          <button onClick={closeModal}>Cancel</button>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}