{"ast":null,"code":"var _jsxFileName = \"/Users/akshaybatra/Workspace/dynamic-boxes-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [boxes, setBoxes] = useState([]);\n  const [editingBoxId, setEditingBoxId] = useState(null);\n  const [newBoxText, setNewBoxText] = useState('');\n  const addBox = () => {\n    const newBox = {\n      id: boxes.length + 1,\n      color: getRandomColor(),\n      text: 'transformer_' + (boxes.length + 1)\n    };\n    setBoxes(prevBoxes => [...prevBoxes, newBox]);\n  };\n  const removeBox = id => {\n    const updatedBoxes = boxes.filter(box => box.id !== id);\n    setBoxes(updatedBoxes);\n  };\n  const startEditing = (id, text) => {\n    setEditingBoxId(id);\n    setNewBoxText(text);\n    setShowPopup(true);\n  };\n  const finishEditing = () => {\n    setEditingBoxId(null);\n    setNewBoxText('');\n    setShowPopup(false);\n  };\n  const handleInputChange = event => {\n    setNewBoxText(event.target.value);\n  };\n  const updateBoxText = id => {\n    const updatedBoxes = boxes.map(box => {\n      if (box.id === id) {\n        return {\n          ...box,\n          text: newBoxText\n        };\n      }\n      return box;\n    });\n    setBoxes(updatedBoxes);\n    finishEditing();\n  };\n  const getRandomColor = () => {\n    const colors = ['green', 'yellow', 'purple', 'orange'];\n    const randomIndex = Math.floor(Math.random() * colors.length);\n    return colors[randomIndex];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dynamic Boxes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addBox,\n      children: \"Add Box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        style: {\n          backgroundColor: 'white'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-text\",\n          children: \"Source\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, \"source\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), boxes.map(box => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"arrow\",\n          style: {\n            top: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box\",\n          style: {\n            backgroundColor: 'orange'\n          },\n          onClick: () => startEditing(box.id, box.text),\n          children: editingBoxId === box.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box-popup\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newBoxText,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => updateBoxText(box.id),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: finishEditing,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box-text\",\n            children: box.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)\n        }, box.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"arrow\",\n        style: {\n          top: '5px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        style: {\n          backgroundColor: 'white'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-text\",\n          children: \"Sync\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, \"source\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ygI0ne45FQXuFITYvHW2teu8fjI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","boxes","setBoxes","editingBoxId","setEditingBoxId","newBoxText","setNewBoxText","addBox","newBox","id","length","color","getRandomColor","text","prevBoxes","removeBox","updatedBoxes","filter","box","startEditing","setShowPopup","finishEditing","handleInputChange","event","target","value","updateBoxText","map","colors","randomIndex","Math","floor","random","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","backgroundColor","top","type","onChange","_c","$RefreshReg$"],"sources":["/Users/akshaybatra/Workspace/dynamic-boxes-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [boxes, setBoxes] = useState([]);\n  const [editingBoxId, setEditingBoxId] = useState(null);\n  const [newBoxText, setNewBoxText] = useState('');\n\n  const addBox = () => {\n    const newBox = {\n      id: boxes.length + 1,\n      color: getRandomColor(),\n      text: 'transformer_' + (boxes.length + 1),\n    };\n    setBoxes((prevBoxes) => [...prevBoxes, newBox]);\n  };\n\n  const removeBox = (id) => {\n    const updatedBoxes = boxes.filter((box) => box.id !== id);\n    setBoxes(updatedBoxes);\n  };\n\n  const startEditing = (id, text) => {\n    setEditingBoxId(id);\n    setNewBoxText(text);\n    setShowPopup(true);\n  };\n\n  const finishEditing = () => {\n    setEditingBoxId(null);\n    setNewBoxText('');\n    setShowPopup(false);\n  };\n\n  const handleInputChange = (event) => {\n    setNewBoxText(event.target.value);\n  };\n\n  const updateBoxText = (id) => {\n    const updatedBoxes = boxes.map((box) => {\n      if (box.id === id) {\n        return { ...box, text: newBoxText };\n      }\n      return box;\n    });\n    setBoxes(updatedBoxes);\n    finishEditing();\n  };\n\n  const getRandomColor = () => {\n    const colors = ['green', 'yellow', 'purple', 'orange'];\n    const randomIndex = Math.floor(Math.random() * colors.length);\n    return colors[randomIndex];\n  };\n\n\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic Boxes</h1>\n      <button onClick={addBox}>Add Box</button>\n      <div className=\"box-container\">\n        <div\n          key=\"source\"\n          className=\"box\"\n          style={{ backgroundColor: 'white' }}\n        >\n          <div className=\"box-text\">Source</div>\n        </div>\n        {boxes.map((box) => (\n\n          <>\n            <div\n                className=\"arrow\"\n                style={{\n                  top: '5px',\n                }} />\n            <div\n              key={box.id}\n              className=\"box\"\n              style={{ backgroundColor: 'orange' }}\n              onClick={() => startEditing(box.id, box.text)}\n            >\n              {editingBoxId === box.id ? (\n                <div className=\"box-popup\">\n                  <input\n                    type=\"text\"\n                    value={newBoxText}\n                    onChange={handleInputChange}\n                  />\n                  <button onClick={() => updateBoxText(box.id)}>Save</button>\n                  <button onClick={finishEditing}>Cancel</button>\n                </div>\n              ) : (\n                <div className=\"box-text\">{box.text}</div>\n              )}\n\n            </div>\n          </>\n        ))}\n\n        <div \n              className=\"arrow\"\n              style={{\n              top: '5px',\n              }}\n            />\n\n        <div\n          key=\"source\"\n          className=\"box\"\n          style={{ backgroundColor: 'white' }}\n        >\n          <div className=\"box-text\">Sync</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}